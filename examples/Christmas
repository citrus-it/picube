
proc Sun {{on 1}} {
	if {$on} {
		cube.colour yellow
	} else {
		cube.colour 0 0 0
	}
	cube.sphere 6 6 6 3
}

proc Snowman {} {
	cube.clear
	cube.colour 33 63 63
	cube.sphere 2 3 6 3
	cube.sphere 2 3 2 5
	# Buttons
	cube.colour 63 0 0
	cube.led 2 1 1
	cube.led 2 1 3
	# Eyes
	cube.colour 0 0 63
	cube.led 1 2 6
	cube.led 3 2 6
	set d 130
	# Move around the cube
	loop z 0 2 {
		loop i 0 3 {
			cube.translate 1 0 0
			delay $d
		}
		loop i 0 3 {
			cube.translate 0 1 0
			delay $d
		}
		loop i 0 3 {
			cube.translate -1 0 0
			delay $d
		}
		loop i 0 3 {
			cube.translate 0 -1 0
			delay $d
		}
	}
	Sun 1
	sleep 5

	# Melt!
	loop z 0 6 {
		Sun 0
		cube.translate 0 0 -1
		cube.layer 0 33 63 63
		if {$z > 1} {
			cube.colour 63 0 0
			cube.led 2 2 0
			cube.led 4 2 0
		}
		if {$z > 2} {
			cube.layer 1 33 63 63
		}
		if {$z > 3} {
			cube.colour 0 0 63
			cube.led 1 2 1
			cube.led 3 2 1
		}
		Sun 1
		sleep 2
	}
}

proc Tree {} {
	cube.clear
	cube.colour green
	# Basic tree shape
	cube.sphere 3 3 0 6
	cube.sphere 3 3 1 5
	cube.sphere 3 3 2 4
	cube.sphere 3 3 3 3
	cube.sphere 3 3 4 3
	cube.sphere 3 3 5 2
	cube.sphere 3 3 6 1
	# Star
	cube.colour yellow
	cube.led 3 3 7
	cube.led 3 2 6
	cube.led 3 4 6
	cube.led 2 3 6
	cube.led 4 3 6
	# Sparkle
	cube.colour 33 63 63
	set history {}
	loop k 0 1000 {
		set x [rand 0 8]
		set y [rand 0 8]
		set z [rand 0 8]

		if {[lindex [cube.getled $x $y $z] 1] == 63} {
			cube.colour random
			cube.led $x $y $z
			lappend history [list $x $y $z]
			delay 50
			# Truncate history to 5 and revert old places to
			# green.
			while {[llength $history] > 5} {
				lassign [lindex $history 0] x y z
				cube.led $x $y $z 0 63 0
				set history [lrange $history 1 end]
			}
		}
	}
}

proc Christmas {} {
	Tree
	Snowman
}

if {!$interactive} { Christmas }

